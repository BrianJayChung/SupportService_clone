version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.14.0
  aws-cli: circleci/aws-cli@1.3.1

jobs:
  aws-cli-deploy-staging:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: circle-ci
      - run: aws deploy create-deployment --application-name AppECS-flask-app-cluster-ss-staging --deployment-group-name DgpECS-flask-app-cluster-ss-staging --revision revisionType=S3,s3Location="{bucket=support-service-codedeploy,key=appspec_staging.yaml,bundleType=yaml}"
  aws-cli-deploy-production:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: circle-ci
      - run: aws deploy create-deployment --application-name AppECS-flask-app-cluster-ss-blue-green --deployment-group-name DgpECS-flask-app-cluster-ss-blue-green --revision revisionType=S3,s3Location="{bucket=support-service-codedeploy,key=appspec.yaml,bundleType=yaml}"

workflows:
  build-and-deploy:
    jobs:
      - aws-ecr/build-and-push-image:
          name: aws-ecr-build-and-push-staging
          repo: "${AWS_ECR_REPO}"
          dockerfile: Dockerfile.ecr
          tag: staging
      - aws-cli-deploy-staging:
          requires:
            - aws-ecr-build-and-push-staging
      - hold:
          type: approval
          requires:
            - aws-cli-deploy-staging
          filters:
            branches:
              only: master
      - aws-ecr/build-and-push-image:
          name: aws-ecr-build-and-push-production
          requires:
            - hold
          repo: "${AWS_ECR_REPO}"
          dockerfile: Dockerfile.ecr
          tag: production
          filters:
            branches:
              only: master
      - aws-cli-deploy-production:
          requires:
            - aws-ecr-build-and-push-production
          filters:
            branches:
              only: master